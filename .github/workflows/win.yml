name: Windows Only Integration

on:
  workflow_dispatch:
  
  #push:
  #  branches: [ "main" ]
  #  paths-ignore:
  #    - '**/*.md'
  #pull_request:
  #  branches: [ "main" ]
  #  paths-ignore:
  #    - 'doc/**'
  #    - 'contrib/**'
  #    - '**/*.md'

jobs:
  build:
    name: ${{ matrix.name }}

    env:
      MAKEJOBS: "-j3"
      CHECK_DOC: "0"
      CCACHE_SIZE: "100M"
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      CCACHE_COMPRESS: "1"
      PYTHON_DEBUG: "1"
      WINEDEBUG: fixme-all
      SDK_URL: https://bitcoincore.org/depends-sources/sdks
      VERSION: "1.1.4.4"

    strategy:
      fail-fast: false
      matrix:
        name:
          - x86_64-win

        include:

          - name: x86_64-win
            host: x86_64-w64-mingw32
            arch: "i386"
            os: ubuntu-20.04
            packages: python3 nsis g++-mingw-w64-x86-64 wine64 bc wine-binfmt
            postinstall: |
              sudo update-alternatives --set x86_64-w64-mingw32-gcc  /usr/bin/x86_64-w64-mingw32-gcc-posix
              sudo update-alternatives --set x86_64-w64-mingw32-g++  /usr/bin/x86_64-w64-mingw32-g++-posix
              sudo update-binfmts --import /usr/share/binfmts/wine
            run-tests: false
            dep-opts: ""
            config-opts: "--disable-shared --enable-gui=qt5"
            goal: install
            strip-cmd: "x86_64-w64-mingw32-strip"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Add architecture
        if: ${{ matrix.arch }}
        run: |
          sudo dpkg --add-architecture "${{ matrix.arch }}"
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps bison
          sudo apt-get install ${{ matrix.packages }}
      - name: Post install
        if: ${{ matrix.postinstall }}
        run: ${{ matrix.postinstall }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: SDK cache
        if: ${{ matrix.sdk }}
        uses: actions/cache@v3
        env:
          cache-name: sdk
        with:
          path: ./depends/sdk-sources
          key: ${{ matrix.name }}-${{ env.cache-name }}

      - name: Install SDK
        if: ${{ matrix.sdk }}
        run: |
          mkdir -p ./depends/sdk-sources
          mkdir -p ./depends/SDKs
          curl --location --fail $SDK_URL/MacOSX${{ matrix.sdk }}.sdk.tar.gz -o depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz
          tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz
      - name: Dependency cache
        uses: actions/cache@v3
        env:
          cache-name: depends
        with:
          path: ./depends/built
          key: ${{ matrix.name }}-${{ env.cache-name }}-cache-${{ hashFiles('depends/packages/*') }}

      - name: Build depends
        run: |
          make $MAKEJOBS -C depends HOST=${{ matrix.host }} ${{ matrix.dep-opts }}
      - name: CCache
        uses: actions/cache@v3
        env:
          cache-name: ccache
        with:
          path: ~/.ccache
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('**/configure.ac') }}

      - name: Build Pulsar Core
        run: |
          #depends/${{ matrix.host }}/native/bin/ccache --max-size=$CCACHE_SIZE
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/${{ matrix.host }} ${{ matrix.config-opts }} || ( cat config.log && false)
          make $MAKEJOBS ${{ matrix.goal }} || ( echo "Build failure. Verbose build follows." && make ${{ matrix.goal }} V=1 ; false )
          
      - name: Strip built binaries
        run: |
          ${{ matrix.strip-cmd }} depends/${{ matrix.host }}/bin/pulsard* src/qt/pulsar-qt* src/pulsar-cli* src/pulsar-tx* dist/Pulsar-Qt.app* || ( echo "Failed stripping builds. The build will have a bigger file size" )
          
      - name: Move to release
        run: |
          mkdir release
          cp depends/${{ matrix.host }}/bin/pulsard* release/
          cp src/qt/pulsar-qt* release/
          cp src/pulsar-cli* release/
          cp src/pulsar-tx* release/
        continue-on-error: true
      
      - name: Chmod
        if: |
          matrix.name != 'x86_64-macos' &&
          matrix.name != 'x86_64-win'
        run: |
          chmod -R +x release/
          
      - name: Tar files
        if: |
          matrix.name != 'x86_64-macos' &&
          matrix.name != 'x86_64-win'
        run: |
            tar -cvf Pulsar-${{ env.VERSION }}-${{ matrix.name }}.tar -C release/ .
      
      - name: Upload artifacts
        if: |
          matrix.name != 'x86_64-macos' &&
          matrix.name != 'x86_64-win'
        uses: actions/upload-artifact@v3
        with:
          name: Pulsar-${{ env.VERSION }}-${{ matrix.name }}
          path: |
            Pulsar-${{ env.VERSION }}-${{ matrix.name }}.tar
            
      - name: Upload artifacts WIN/OSX
        if: |
          matrix.name == 'x86_64-macos' ||
          matrix.name == 'x86_64-win'
        uses: actions/upload-artifact@v3
        with:
          name: Pulsar-${{ env.VERSION }}-${{ matrix.name }}
          path: |
            release/pulsard*
            release/pulsar-qt
            release/pulsar-qt.exe
            release/pulsar-cli
            release/pulsar-cli.exe
            release/Pulsar-Qt.app
